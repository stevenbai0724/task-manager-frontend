{"version":3,"sources":["components/UpButton.js","components/DownButton.js","components/Timer.js","assets/nokia.mp3","components/Task.js","components/Card.js","components/Notes.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","button","height","width","buttonDiv","display","alignItems","justifyContent","UpButton","props","classes","className","ButtonBase","onClick","handleUpButton","secs","isRunning","fontSize","DownButton","interval","handleDownButton","container","color","textAlign","modal","position","top","left","transform","backgroundColor","minHeight","paddingLeft","paddingRight","paddingBottom","maxWidth","overflowY","maxHeight","borderRadius","grid","gridTemplateColumns","gridGap","gridRowGap","buttonTop","buttonBottom","timeDiv","INT","Timer","useState","pause","setPause","seconds","setSeconds","minutes","setMinutes","hours","setHours","int","setInt","working","setWorking","timeleft","setTimeleft","workTime","setWorkTime","breakTime","setBreakTime","setIsRunning","initial","setInitial","isMounted","useRef","isMounted2","useEffect","temp","Math","floor","setInterval","handleSongStart","handleTimerOpen","clearInterval","current","localStorage","setItem","JSON","stringify","temp1","parse","getItem","temp2","console","log","Modal","open","onClose","handleTimerClose","handleSongPause","style","Button","flexDirection","input","paddingTop","boxShadow","minWidth","border","fontFamily","marginTop","marginBottom","outline","buttonText","fontWeight","radioGroup","Task","val","setVal","priority","setPriority","task","complete","obj","setObj","handleTaskClose","type","placeholder","onChange","e","target","value","RadioGroup","row","evt","parseInt","FormControlLabel","control","Radio","sx","label","bottom","append","card","icon","iconButton","textBox","wordWrap","padding","leftDiv","labelDiv","Card","btnbase","marginLeft","verticalAlign","IconButton","handleDelete","index","Notes","handleNotesClose","div","right","topbar","h1","h2","taskSubtitle","App","tasks","setTasks","click","setClick","isTimerOpen","setIsTimerOpen","isTaskOpen","setIsTaskOpen","isNotesOpen","setIsNotesOpen","Audio","ringer","song","setSong","count","setCount","cnt","i","length","arr","splice","play","msg","sort","a","b","borderColor","borderStyle","borderWidth","marginRight","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a303e663.chunk.js","sourcesContent":["import React from 'react'\nimport {ButtonBase} from \"@mui/material\"\nimport {makeStyles} from \"@mui/styles\"\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport LockIcon from '@mui/icons-material/Lock';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    height: \"100%\",\n    width: \"100%\",      \n  },\n  buttonDiv: {\n    display: \"flex\", \n    alignItems: \"center\", \n    justifyContent: \"center\",\n    height: \"20px\"\n  },\n}))\nfunction UpButton(props) {\n\n  const classes = useStyles();\n\n\n  return (\n    <div className = {classes.buttonDiv}>\n      <ButtonBase \n      \n        onClick = {() => {\n            props.handleUpButton(props.secs)\n          }\n        } \n        className = {classes.button}\n      >\n      {\n        !props.isRunning && <ArrowDropUpIcon fontSize = \"large\" ></ArrowDropUpIcon>\n      }\n      {\n        props.isRunning && <LockIcon fontSize = \"small\" />\n      }\n        \n      </ButtonBase>\n    </div>\n  )\n}\n\nexport default UpButton","import React from 'react'\nimport {ButtonBase} from \"@mui/material\"\nimport {makeStyles} from \"@mui/styles\"\nimport LockIcon from '@mui/icons-material/Lock';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    height: \"100%\",\n    width: \"100%\",      \n  },\n  buttonDiv: {\n    display: \"flex\", \n    alignItems: \"center\", \n    justifyContent: \"center\",\n    height: \"20px\"\n  },\n}))\nfunction DownButton(props) {\n\n  const classes = useStyles();\n\n\n  return (\n    <div className = {classes.buttonDiv}>\n      <ButtonBase \n      \n        onClick = {() => {\n            props.handleDownButton(props.secs)\n          }\n        } \n        className = {classes.button}\n      >\n      {\n        !props.isRunning && <ArrowDropDownIcon fontSize = \"large\" ></ArrowDropDownIcon>\n      }\n      {\n        props.isRunning && <LockIcon fontSize = \"small\" />\n      }\n        \n      </ButtonBase>\n    </div>\n  )\n}\n\nexport default DownButton","import {React, useEffect, useState, useRef} from 'react'\nimport {makeStyles} from \"@mui/styles\"\nimport { Button } from '@mui/material';\nimport { Modal } from '@mui/material';\nimport {ButtonBase} from \"@mui/material\"\nimport UpButton from \"./UpButton\";\nimport DownButton from \"./DownButton\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        color: \"white\",\n        textAlign: \"center\",\n    },\n    modal: {\n      color: \"white\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      backgroundColor: \"#1c1727\",\n      width: \"450px\",\n      minHeight: \"450px\",\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\",\n      paddingBottom: \"10px\",\n      maxWidth: \"80vw\",\n      textAlign: \"center\",\n      overflowY: \"auto\",\n      maxHeight: \"calc(100vh - 200px)\",\n      borderRadius: \"20px\",\n      '&::-webkit-scrollbar' :{\n          width: '4px',\n  \n        },\n        '&::-webkit-scrollbar-thumb' :{\n          backgroundColor: \"#333333\",\n          borderRadius: \"7px\",\n      \n        },\n        '&::-webkit-scrollbar-track' :{\n          borderRadius: \"4px\",\n          display: \"none\",\n        },\n    },\n    grid: {\n      display: \"grid\",\n      gridTemplateColumns: \"auto auto auto auto auto\",\n      gridGap: \"3px\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      gridRowGap: \"2px\",\n    },\n    buttonTop: {\n      height: \"100%\",\n      width: \"100%\",\n    },\n    buttonBottom: {\n      height: \"100%\",\n      width: \"100%\",      \n    },\n    buttonDiv: {\n      display: \"flex\", \n      alignItems: \"center\", \n      justifyContent: \"center\",\n      height: \"20px\"\n    },\n    timeDiv: {\n      display: \"flex\", \n      alignItems: \"center\", \n      justifyContent: \"center\", \n      height: \"50px\"\n    },\n}))\nvar interval;\nconst INT = 10700000000; //max int value to stop timer without clearInterval(), approx 4 months in milliseconds\nfunction Timer(props) {\n\n  const [pause, setPause] = useState(\"Start\")\n  const [seconds, setSeconds] = useState(0)\n  const [minutes, setMinutes] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [int, setInt] = useState(10700000000);\n  const [working, setWorking] = useState(true);\n  const [timeleft, setTimeleft] = useState(1500);\n  const [workTime, setWorkTime] = useState(1500);\n  const [breakTime, setBreakTime] = useState(300);\n  const [isRunning, setIsRunning] = useState(false);\n  const [initial, setInitial] = useState(true);\n  const isMounted = useRef(false);\n  const isMounted2 = useRef(false);\n\n  const handleSkip = () => {\n    console.log(\"skipped\")\n    setInitial(false);\n    if(working){\n      setWorking(false);\n      setPause(\"Start\");\n      setTimeleft(breakTime);\n      setBreakTime(breakTime);\n    }\n    else{\n      setWorking(true);\n      setPause(\"Start\");\n      setTimeleft(workTime);\n      setWorkTime(workTime);\n    }\n    setInt(INT)\n    setIsRunning(false);\n  }\n  \n  useEffect(() => {\n    var temp = timeleft;\n    setHours(Math.floor(temp/3600));\n    temp = temp % 3600;\n    setMinutes(Math.floor(temp/60));\n    temp = temp % 60;\n    setSeconds(temp);\n\n      interval = setInterval(() => {\n\n        if(timeleft === 0){\n          setInt(INT)\n          setIsRunning(false);\n          setPause(\"Start\")\n          {props.handleSongStart()}\n          {props.handleTimerOpen()}\n          if(working){\n            setWorking(false);\n            setTimeleft(breakTime);\n          }\n          else{\n            setWorking(true);\n            setTimeleft(workTime);\n          }\n\n        }\n        else{\n          setTimeleft(timeleft - 1)\n\n        }\n\n      }, int);\n      return () => clearInterval(interval);\n    \n\n  }, [pause, timeleft]);\n\n\n\n  useEffect (() => {\n    if(isMounted.current){\n      var temp = workTime;\n      localStorage.setItem('workTime', JSON.stringify(workTime))\n      setHours(Math.floor(temp/3600));\n      temp = temp % 3600;\n      setMinutes(Math.floor(temp/60));\n      temp = temp % 60;\n      setSeconds(temp);\n      setTimeleft(workTime)\n    }\n    else isMounted.current = true;\n\n  }, [workTime])\n\n  useEffect (() => {\n    if(isMounted2.current){\n      var temp = breakTime;\n      localStorage.setItem('breakTime', JSON.stringify(breakTime))\n      if(!initial){\n        setHours(Math.floor(temp/3600));\n        temp = temp % 3600;\n        setMinutes(Math.floor(temp/60));\n        temp = temp % 60;\n        setSeconds(temp);\n        setTimeleft(breakTime);\n      }\n\n    }\n    else{\n      isMounted2.current = true;\n    }\n  }, [breakTime])\n\n  useEffect (() => {\n    const temp1 = JSON.parse(localStorage.getItem('workTime'));\n    const temp2 = JSON.parse(localStorage.getItem('breakTime'));\n\n    if(temp2){\n      console.log(\"retreive \" + temp2)\n      setBreakTime(temp2);\n    }\n    if(temp2){\n      console.log(\"retreive\" + temp1)\n      setWorkTime(temp1);\n      setTimeleft(temp1);\n    }\n\n  }, [])\n\n  const handleUpButton = (secs) => {\n    !isRunning && working && setWorkTime(workTime + secs)\n    !isRunning && !working && setBreakTime(breakTime + secs)\n  }\n\n  const handleDownButton = (secs) => {\n    !isRunning && working && workTime > 60 && setWorkTime(workTime - secs)\n    !isRunning && !working && breakTime > 60 && setBreakTime(breakTime - secs)\n  }\n\n  const classes = useStyles();\n  \n    return (\n        <div className = {classes.container}>\n            \n          <Modal open = {props.open} onClose = {() => {\n              props.handleTimerClose()\n              props.handleSongPause()\n            }}\n          >\n            <div className = {classes.modal}>\n\n              <br></br>\n              <div className = {classes.grid}> {/* time adjuster */}\n\n                <UpButton handleUpButton = {handleUpButton} secs = {3600} isRunning = {isRunning}></UpButton>\n\n                <div className = {classes.buttonDiv}><h1></h1></div>\n\n                <UpButton handleUpButton = {handleUpButton} secs = {60} isRunning = {isRunning}></UpButton>\n\n                <div className = {classes.buttonDiv}><h1></h1></div>\n\n                <UpButton handleUpButton = {handleUpButton} secs = {1} isRunning = {isRunning}></UpButton>\n                \n                <div className = {classes.timeDiv}><h1>{ hours <= 9 ?`0${hours}`: hours}</h1></div>\n                <div className = {classes.timeDiv}><h1>:</h1></div>\n                <div className = {classes.timeDiv}><h1>{ minutes <= 9 ?`0${minutes}`: minutes}</h1></div>\n                <div className = {classes.timeDiv}><h1>:</h1></div>\n                <div className = {classes.timeDiv}><h1>{ seconds <= 9 ?`0${seconds}`: seconds}</h1></div>\n\n                <DownButton handleDownButton = {handleDownButton} secs = {3600} isRunning = {isRunning}></DownButton>\n\n                <div className = {classes.buttonDiv}><h1></h1></div>\n\n                <DownButton handleDownButton = {handleDownButton} secs = {60} isRunning = {isRunning}></DownButton>\n\n                <div className = {classes.buttonDiv}><h1></h1></div>\n\n                <DownButton handleDownButton = {handleDownButton} secs = {1} isRunning = {isRunning}></DownButton>\n\n              </div>\n\n            <br></br>\n\n            <h1 style = {{fontSize: \"15pt\"}}>{working ? \"Break time is over! Time to do work\" : \"Good work! Take a short break\"}</h1>\n            <br></br>\n            <Button \n              onClick = {() => {\n                props.handleSongPause()\n                setInitial(false);\n                if(pause === \"Start\"){\n                  setPause(\"Pause\");\n                  setInt(1000);\n                  setIsRunning(true);\n                }\n                else{\n                  setPause(\"Start\");\n                  setInt(INT)\n                }\n              }}\n            >\n              {pause}\n            </Button>\n\n            <Button\n              onClick = {handleSkip}\n            >\n              Skip Timer\n            </Button>\n            </div>\n          </Modal>\n\n        </div>\n        \n    )\n\n\n}\n\nexport default Timer","export default __webpack_public_path__ + \"static/media/nokia.9bac0308.mp3\";","import React from 'react'\nimport {useEffect, useState, useRef} from 'react'\nimport {makeStyles} from \"@mui/styles\"\nimport {Button, ButtonBase} from \"@mui/material\"\nimport { Modal } from '@mui/material';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    textAlign: \"center\",\n    color: \"white\",\n  },\n  modal: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    color: \"white\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"#1c1727\",\n    width: \"450px\",\n    minHeight: \"250px\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    paddingBottom: \"10px\",\n    maxWidth: \"80vw\",\n    textAlign: \"center\",\n    overflowY: \"auto\",\n    maxHeight: \"calc(100vh - 200px)\",\n    borderRadius: \"20px\",\n    '&::-webkit-scrollbar' :{\n        width: '4px',\n\n      },\n      '&::-webkit-scrollbar-thumb' :{\n        backgroundColor: \"#333333\",\n        borderRadius: \"7px\",\n    \n      },\n      '&::-webkit-scrollbar-track' :{\n        borderRadius: \"4px\",\n        display: \"none\",\n      },\n  },\n  input: {\n    paddingTop: \"5px\",\n    boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 10px 0px\",\n    maxWidth: \"95%\",\n    minWidth: \"95%\",\n    minHeight: \"100px\",\n    fontSize: \"15pt\",\n    border: \"none\",\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    color: \"white\",\n    backgroundColor: \"#201d2b\",\n    borderRadius: \"5px\",\n    fontFamily: \"sans-serif\",\n    marginTop: \"10px\",\n    display: \"block\",\n    marginBottom: \"50px\",\n    outline: \"none\",\n    \n    '&::-webkit-scrollbar' :{\n      width: '4px',\n\n    },\n    '&::-webkit-scrollbar-thumb' :{\n      backgroundColor: \"#333333\",\n      borderRadius: \"7px\",\n  \n    },\n    '&::-webkit-scrollbar-track' :{\n      borderRadius: \"4px\",\n      display: \"none\",\n    },\n  },\n  button: {\n\n    height: \"40px\",\n    display: \"inline-block\"\n  },\n  buttonText: {\n    fontSize: \"12pt\",\n    fontWeight: \"normal\"\n  },\n  radioGroup: {\n    color: \"white\",\n    marginBottom: \"20px\"\n  },\n\n}))\n\nfunction Task(props) {\n  const classes = useStyles();\n  const [val, setVal] = useState(\"\");\n  const [priority, setPriority] = useState(1);\n  const [obj, setObj] = useState({\n    task: \"(empty task)\",\n    priority: 1,\n    complete: false,\n  });\n\n  const handleOnChange = (e) => {\n    setVal(e.target.value);\n    let temp = {task: e.target.value}\n    setObj(obj => ({\n      ...obj,\n      ...temp\n    }))\n  }\n  //after add task, clear the task to (empty task) but keep the last priority setting the same\n  const pressed = () => {\n    props.append(obj);\n    setVal(\"\")\n    let temp = {task: \"(empty task)\"}\n    setObj(obj => ({\n      ...obj,\n      ...temp,\n    }));\n  }\n  const onChange = (evt) => {\n    setPriority(parseInt(evt.target.value));\n    let temp = {priority: parseInt(evt.target.value)}\n    setObj(obj => ({\n      ...obj,\n      ...temp\n    }))\n  }\n  //debug\n  const isMounted = useRef(false);\n  useEffect(() => {\n    if(isMounted.current){\n      console.log(obj)\n    }\n    else isMounted.current = true;\n  }, [priority])\n\n  return (\n    <div className = {classes.container}>\n      <Modal  \n        open = {props.open}\n        onClose = {props.handleTaskClose}\n      >\n        <div className= {classes.modal}>\n          \n          <textarea \n          \n            type = \"text\"\n            className = {classes.input}\n            placeholder = \"enter a new task...\"\n            onChange = {handleOnChange}\n            value = {val}\n          /> \n          <h1 style = {{fontSize: \"15pt\"}}>Select task priority: </h1>\n          <RadioGroup\n            className={classes.radioGroup}\n            row\n            value = {priority}\n            onChange = {onChange}\n          >\n            <FormControlLabel value={1} control= {<Radio \n              sx={{\n              color: \"white\",\n              \"&.Mui-checked\": {\n                color: \"#37f992\"\n              }\n            }} />} label=\"Low\" />\n\n            <FormControlLabel value={2} control={<Radio \n             sx={{\n              color: \"white\",\n              \"&.Mui-checked\": {\n                color: \"#f2a53f\"\n              }\n            }}/>} label=\"Medium\" />\n\n            <FormControlLabel value={3} control={<Radio  \n              sx={{\n              color: \"white\",\n              \"&.Mui-checked\": {\n                color: \"#e62a19\"\n              }\n            }}/>} label=\"High\" />\n\n          </RadioGroup>\n\n\n          <br></br>\n          <div style = {{position: \"absolute\", bottom: \"10px\", width: \"95%\", textAlign: \"center\"}}>\n          <Button className = {classes.button} onClick = {pressed}>\n            <h1 className = {classes.buttonText}>Add Task</h1>\n          </Button>\n          <Button  className = {classes.button} onClick = {props.handleTaskClose}>\n            <h1 className = {classes.buttonText}>Done</h1>\n          </Button>\n          </div>\n        \n        </div>\n\n        \n\n\n      </Modal>\n\n    </div>\n\n    \n  )\n}\n\nexport default Task","import React, {useEffect, useState} from 'react'\nimport {makeStyles} from \"@mui/styles\"\nimport { ButtonBase, IconButton} from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\n\nconst useStyles = makeStyles((theme) => ({\n\n    card: {\n        width : \"calc(100% - 20px)\",\n        paddingLeft: \"10px\", \n        paddingRight: \"10px\",\n        minHeight: \"150px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        fontSize: \"24pt\",\n        color: \"white\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n        boxShadow: \"rgba(100, 100, 111, 0.2) 1px 4px 5px 2px\",\n        borderRadius: \"20px\",\n      },\n    icon: {\n        fontSize: \"small\",\n    },\n    iconButton: {\n        width: \"50px\",\n        height: \"50px\",\n    },\n    textBox: {\n        wordWrap: \"break-word\",\n        maxWidth: \"500px\",\n        padding: \"20px\",\n    },\n    leftDiv: {\n        maxWidth: \"500px\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"right\",    \n    },\n    labelDiv: {\n        height: \"45px\",\n        width: \"100%\",\n        marginBottom: \"20px\",\n    }\n    \n\n}))\n\nfunction Card(props) {\n  const classes = useStyles();\n  \n    const btnbase = {\n        backgroundColor: props.priority === 1 ? \"#37f992\" : (props.priority === 2 ? \"#f2a53f\" : \"#ff4433\"),\n        height: \"100%\",\n        minWidth: \"100px\",\n        display: \"flex\",\n        borderRadius: \"15px\",\n        marginLeft: \"20px\",\n        color: \"#1c1727\"\n\n    }  \n  return (\n    <div className = {classes.card}>\n\n        <div className = {classes.leftDiv}>\n      \n                <div className = {classes.textBox}>\n                    <h1 style = {{fontSize: \"18pt\", verticalAlign: \"top\", display: \"inline\", fontWeight: \"normal\"}}>{props.task}</h1>\n                </div>\n                <div className = {classes.labelDiv}>\n    \n                    \n                   \n                        <ButtonBase style = {btnbase}>\n                            <h1 style = {{fontSize: \"15pt\", fontWeight: \"normal\"}}>{props.priority === 1 ? \"Low\" : (props.priority === 2 ? \"Medium\" : \"High\") }</h1>\n                        </ButtonBase>\n                                       \n                </div>\n         \n        </div>\n\n\n        <IconButton onClick = {() => props.handleDelete(props.index)} className = {classes.iconButton}>\n            {\n                !props.complete && <CheckBoxOutlineBlankIcon sx={{ color: \"#8e5ff3\" }} fontSize = \"large\"></CheckBoxOutlineBlankIcon>\n            }\n            {\n                props.complete && <CheckBoxIcon sx={{ color: \"#8e5ff3\" }} fontSize = \"large\"></CheckBoxIcon>\n            }\n        </IconButton>\n\n    </div>\n  )\n}\n\nexport default Card","import React, {useEffect, useState, useRef} from 'react'\nimport {makeStyles} from \"@mui/styles\"\nimport { Button } from '@mui/material';\nimport { Modal } from '@mui/material';\nimport {ButtonBase} from \"@mui/material\"\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        color: \"white\",\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        backgroundColor: \"#1c1727\",\n        width: \"450px\",\n        minHeight: \"450px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        paddingBottom: \"10px\",\n        maxWidth: \"80vw\",\n        textAlign: \"center\",\n        overflowY: \"auto\",\n        maxHeight: \"calc(100vh - 200px)\",\n        borderRadius: \"20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        '&::-webkit-scrollbar' :{\n            width: '4px',\n    \n          },\n          '&::-webkit-scrollbar-thumb' :{\n            backgroundColor: \"#333333\",\n            borderRadius: \"7px\",\n        \n          },\n          '&::-webkit-scrollbar-track' :{\n            borderRadius: \"4px\",\n            display: \"none\",\n          },\n      },\n      input: {\n        paddingTop: \"5px\",\n        boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 10px 0px\",\n        maxWidth: \"95%\",\n        minWidth: \"95%\",\n        minHeight: \"100px\",\n        fontSize: \"15pt\",\n        border: \"none\",\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        color: \"white\",\n        backgroundColor: \"#201d2b\",\n        borderRadius: \"5px\",\n        fontFamily: \"sans-serif\",\n        marginTop: \"10px\",\n        display: \"block\",\n        marginBottom: \"50px\",\n        outline: \"none\",\n        \n        '&::-webkit-scrollbar' :{\n          width: '4px',\n    \n        },\n        '&::-webkit-scrollbar-thumb' :{\n          backgroundColor: \"#333333\",\n          borderRadius: \"7px\",\n      \n        },\n        '&::-webkit-scrollbar-track' :{\n          borderRadius: \"4px\",\n          display: \"none\",\n        },\n      },\n      container: {\n        color: \"white\",\n        textAlign: \"center\",\n        },\n}))\n\nfunction Notes(props) {\n  const classes = useStyles();\n  return (\n    <div className= {classes.container}>\n        <Modal open = {props.open} onClose = {props.handleNotesClose}>\n            \n            <div className= {classes.modal}>\n            <textarea \n          \n                type = \"text\"\n                className = {classes.input}\n                placeholder = \"notes\"\n    \n                /> \n            </div>\n            \n        </Modal>\n    </div>\n  )\n}\n\nexport default Notes","import './App.css';\nimport {useState, useEffect, useRef, React} from 'react'\nimport {makeStyles} from \"@mui/styles\"\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport { ButtonBase, Icon, IconButton} from '@mui/material';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport Timer from \"./components/Timer.js\"\nimport TimerIcon from '@mui/icons-material/Timer';\nimport ringer from \"./assets/nokia.mp3\"\nimport Task from \"./components/Task.js\"\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\nimport Card from \"./components/Card.js\"\nimport Notes from \"./components/Notes.js\"\n\nconst useStyles = makeStyles((theme) => ({\n  div: {\n\n    justifyContent: \"center\",\n    display: \"flex\",\n    backgroundColor: \"#1c1727\",\n    minHeight: \"100vh\",\n\n  },\n  container: {\n    marginTop: \"50px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"1100px\",\n\n  },\n  left:{ \n    width: \"600px\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"column\",\n    alignItems: \"left\",\n  },\n  right: {\n    width: \"400px\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"column\",\n    alignItems: \"left\",\n    \n  },\n  topbar: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"620px\",\n  },\n  input: {\n    \n    boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 10px 0px\",\n    width : \"500px\",\n    height: \"40px\",\n    fontSize: \"15pt\",\n    border: \"none\",\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    color: \"white\",\n    backgroundColor: \"#201d2b\",\n    borderRadius: \"5px\",\n\n    '&:focus' : {\n      outline: \"2px solid #357edd\"\n    }\n  },\n  card: {\n    width : \"calc(100% - 20px)\",\n    paddingLeft: \"10px\", \n    paddingRight: \"10px\",\n    minHeight: \"150px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    fontSize: \"24pt\",\n    color: \"white\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"rgba(100, 100, 111, 0.2) 1px 4px 5px 2px\",\n    borderRadius: \"20px\",\n  },\n  textBox: {\n    wordWrap: \"break-word\",\n    maxWidth: \"500px\",\n    height: \"calc(100% - 40px)\",\n    padding: \"20px\",\n  },\n  icon: {\n      fontSize: \"small\",\n  },\n  iconButton: {\n      width: \"50px\",\n      height: \"50px\",\n  },\n  button: {\n    boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 10px 0px\",\n    width: \"100%\",\n    height: \"150px\",\n    marginBottom: \"10px\",\n  },\n  h1: {\n    color: \"white\",\n    fontSize: \"18pt\",\n\n  },\n  h2: {\n    color: \"white\",\n    fontSize: \"15pt\",\n  },\n  taskSubtitle: {\n    height: \"50px\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  }\n\n}))\nfunction App() {\n\n  const [tasks, setTasks] = useState([]);\n  const [click, setClick] = useState(1);\n  const isMounted = useRef(false);\n  const [isTimerOpen, setIsTimerOpen] = useState(false);\n  const [isTaskOpen, setIsTaskOpen] = useState(false);\n  const [isNotesOpen, setIsNotesOpen] = useState(false);\n  const [song, setSong] = useState(new Audio(ringer))\n  const [count, setCount] = useState(0);\n  const classes = useStyles();\n\n  //gets existing items from local storage on render (once)\n  useEffect(() =>{\n    \n    const temp = JSON.parse(localStorage.getItem('tasks'));\n    if(temp){\n      setTasks(temp)\n    }\n\n  }, [])\n\n  //updates local storage on click\n  useEffect(() => {\n    if(isMounted.current){\n    \n      localStorage.setItem('tasks', JSON.stringify(tasks))\n    }\n    else{\n      isMounted.current = true;\n    }\n\n  }, [click])\n\n  useEffect(() => {\n    let temp = [...tasks];\n    let cnt = 0;\n\n    for(let i=0;i<temp.length;i++){\n      if(!temp[i].complete)cnt++;\n    }\n\n    setCount(cnt);\n\n  }, [tasks])\n\n\n  const handleDelete = (index) => {\n    let arr = [...tasks];\n\n    if(arr[index].complete){\n      arr.splice(index, 1);\n      setTasks(arr);\n      setClick(click + 1);\n    }\n    else{\n      let temp = {\n        ...arr[index],\n        complete: true,\n      }\n      arr[index] = temp;\n      setTasks(arr);\n      setClick(click + 1);      \n    }\n\n  };\n  const append = (msg) => {\n  \n      setTasks([...tasks, msg].sort((a, b) => b.priority - a.priority))\n\n      setClick(click + 1);\n\n      console.log(msg);\n      \n  };\n  const handleTimerClose = () => {\n    setIsTimerOpen(false);\n  }\n  const handleTimerOpen = () => {\n    setIsTimerOpen(true)\n  }\n  const handleSongStart = () => {\n    song.play();\n  }\n  const handleSongPause = () => {\n    song.pause();\n    setSong(new Audio(ringer));\n  }\n  const handleTaskClose = () => {\n    setIsTaskOpen(false);\n  }\n  const handleTaskOpen = () => {\n    setIsTaskOpen(true);\n  }\n  const handleNotesClose = () => {\n    setIsNotesOpen(false);\n  }\n  const handleNotesOpen = () => {\n    setIsNotesOpen(true);\n  }\n\n\n\n  return (\n    <div className = {classes.div} >  \n      <Timer open = {isTimerOpen} handleTimerOpen = {handleTimerOpen} handleTimerClose = {handleTimerClose} handleSongPause = {handleSongPause} handleSongStart = {handleSongStart} />   \n\n      <Task append = {append} open = {isTaskOpen} handleTaskClose = {handleTaskClose}> </Task>\n\n      <Notes open = {isNotesOpen} handleNotesClose = {handleNotesClose}></Notes>\n\n      <div className = {classes.container}>\n\n        <div className = {classes.left}>\n          <h1 className= {classes.h1}>Tasks</h1>\n\n          <div className = {classes.taskSubtitle}>\n            <h2 className = {classes.h2}>In Progress</h2>\n            <ButtonBase style = {{width: \"35px\", height: \"35px\", borderRadius: \"50%\", borderColor: \"white\", borderStyle: \"solid\", borderWidth: \"2px\", marginLeft: \"10px\"}}>\n              <h2 className = {classes.h2}>{count}</h2>\n            </ButtonBase>\n          </div>\n\n          <ButtonBase onClick = {handleTaskOpen} style = {{borderRadius: \"20px\", color: \"white\"}} className = {classes.button}>\n            <AddBoxIcon sx={{ color: \"#8e5ff3\" }} style = {{width : \"30px\", height: \"30px\", marginRight: \"5px\"}} /> <h2>New Task</h2> \n        \n          </ButtonBase>\n\n          {\n            tasks.map((obj, index) => {\n            \n            return(\n              !obj.complete && \n              \n              <Card \n                priority = {obj.priority} \n                key = {index} \n                index = {index} \n                task = {obj.task} \n                handleDelete = {handleDelete}\n                complete = {obj.complete}\n                >\n                \n\n              </Card>\n            )\n              \n            })\n          }\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n\n\n          <div className = {classes.taskSubtitle}>\n            <h2 className = {classes.h2}>Completed</h2>\n\n            <ButtonBase style = {{width: \"35px\", height: \"35px\", borderRadius: \"50%\", borderColor: \"white\", borderStyle: \"solid\", borderWidth: \"2px\", marginLeft: \"10px\"}}>\n              <h2 className = {classes.h2}>{tasks.length - count}</h2>\n            </ButtonBase>\n\n          </div>\n\n          {\n            tasks.map((obj, index) => {\n              \n            return(\n              obj.complete && \n              \n              <Card \n                priority = {obj.priority} \n                key = {index} \n                index = {index} \n                task = {obj.task} \n                handleDelete = {handleDelete}\n                complete = {obj.complete}\n              >\n                \n\n              </Card>\n            )\n              \n            })\n          }\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n      \n          \n        </div>\n\n        <div className= {classes.right}>\n          <h1 className= {classes.h1}>Tools</h1>\n\n          <ButtonBase onClick = {handleTimerOpen} style = {{borderRadius: \"20px\", color: \"white\", marginBottom: \"20px\"}} className = {classes.button}>\n            <TimerIcon sx={{ color: \"#8e5ff3\" }} style = {{width : \"30px\", height: \"30px\", marginRight: \"5px\"}} /> <h2>Timer</h2> \n        \n          </ButtonBase>\n\n          <ButtonBase onClick = {handleNotesOpen} style = {{borderRadius: \"20px\", color: \"white\"}} className = {classes.button}>\n            <EventNoteIcon sx={{ color: \"#8e5ff3\" }} style = {{width : \"30px\", height: \"30px\", marginRight: \"5px\"}} /> <h2>Notes</h2> \n        \n          </ButtonBase>\n\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n\n    <App />\n\n);\n\nreportWebVitals();"],"sourceRoot":""}